{:tags []
     :is_new false
     :exports "chart"}
anychart.onDocumentReady(function() {

    // setting data
    var data = anychart.data.set([
        ['P1', 16, 20],
        ['P2', 12, 18],
        ['P3', 9, 14]
    ]);

    // remapping data
    var Sales2003 = data.mapAs({x: [0], value: [1]});
    var Sales2004 = data.mapAs({x: [0], value: [2]});
    stage = anychart.graphics.create('container');

    // setting basic title
    var title = anychart.ui.title();
    title.parentBounds(0, 0, "100%", "10%")
        .text('Stacked Modes Samples')
        .container(stage)
        .draw();

    // first chart
    var valueStackedMode = anychart.columnChart();

    // set chart title
    valueStackedMode.title().text('Value Stacked Mode');

    // setting chart's size and position
    valueStackedMode.bounds(0, '15%', '50%', '85%');

    valueStackedMode.background().stroke('#CCCCCC');

    // define mode type
    valueStackedMode.yScale().stackMode('value');

    // disable axes title
    valueStackedMode.xAxis().title().enabled(false);
    valueStackedMode.yAxis().title().enabled(false);

    valueStackedMode.yScale().minorTicks().interval(2);
    valueStackedMode.yScale().ticks().interval(10);

    // series data setter
    var series;
    series1 = valueStackedMode.column(Sales2003);
    series1.hoverFill('#444444');
    series2 = valueStackedMode.column(Sales2004);
    series2.hoverFill('#444444');

    valueStackedMode.container(stage).draw();

    // second chart
    var percentStackedMode = anychart.columnChart();

    percentStackedMode.title().text('Percent Tacked Mode');

    // setting chart's size and position
    percentStackedMode.bounds('50%', '15%', '50%', '85%');

    percentStackedMode.background().stroke('#CCCCCC');

    // force chart to stack values by Y scale.
    percentStackedMode.yScale().stackMode('percent');

    // disable Axes titles
    percentStackedMode.yAxis().title().enabled(false);
    percentStackedMode.xAxis().title().enabled(false);

    percentStackedMode.yScale().ticks().interval(10);

    // set yAxis labels formatting, force it to add % to values
    percentStackedMode.yAxis().labels().textFormatter(function(info) {
    return info.value + '%';
    });

    // series data setter
    var LineSeries;
    LineSeries = percentStackedMode.column(Sales2003).hoverFill('#444444');
    LineSeries = percentStackedMode.column(Sales2004).hoverFill('#444444');

    percentStackedMode.container(stage).draw();

});