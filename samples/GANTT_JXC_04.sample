{:tags []
     :is_new false
     :exports "chart"}


anychart.onDocumentReady(function () {

            var csvString =
                    '0,0,Activities,1169683200000,1173830400000,,\n' +
                    '1,1,Draft plan,1169683200000,1170460800000,0,\n' +
                    '2,2,Board meeting,1170547200000,1170547200000,0,\n' +
                    '3,3,Research option,1170547200000,1172275200000,0,\n' +
                    '4,4,Final plan,1172275200000,1173830400000,0,\n'

            var mapping = {
                id: 0,
                index: 1,
                name: 2,
                actualStart: 3,
                actualEnd: 4,
                parent: 5
            };  

            var csvSettings = {
                rowsSeparator: ',',
                columnsSeparator: ';',
                ignoreFirstRow: false
            };

            data = anychart.data.tree(csvString, mapping, csvSettings);
            var dataGrid = anychart.ui.dataGrid();
            dataGrid.container('container');
            dataGrid.data(data);

            var thirdColumn = dataGrid.column(2);
            thirdColumn.title('Actual Start');
            thirdColumn.width(100);
            thirdColumn.textFormatter(thirdColumnTextFormatter);

            // set fourth column settings
            var fourthColumn = dataGrid.column(3);
            fourthColumn.title().text('Actual End');
            fourthColumn.width(100);
            fourthColumn.textFormatter(fourthColumnTextFormatter);

            dataGrid.draw();

            dataGrid.listen('signal', dataGrid.draw, false, dataGrid);

        //do pretty formatting for dates in third column
        function thirdColumnTextFormatter(item) {
            var field = item.get(anychart.enums.GanttDataFields.ACTUAL_START);

            // format base line text
            if (field) {
                var actualStart = new Date(+field);
                return formatDate(actualStart.getUTCMonth() + 1) + '/' +
                        formatDate(actualStart.getUTCDate()) + '/' + actualStart.getUTCFullYear() + ' ' +
                        formatDate(actualStart.getUTCHours()) + ':' +
                        formatDate(actualStart.getUTCMinutes());
            } else {
                return '';
            }
        }

        //do pretty formatting for dates in fourth column
        function fourthColumnTextFormatter(item) {
            var field = item.get(anychart.enums.GanttDataFields.ACTUAL_END);
            if (field) {
                var actualEnd = new Date(+field);
                return formatDate((actualEnd.getUTCMonth() + 1)) + '/' +
                        formatDate(actualEnd.getUTCDate()) + '/' + actualEnd.getUTCFullYear() + ' ' +
                        formatDate(actualEnd.getUTCHours()) + ':' +
                        formatDate(actualEnd.getUTCMinutes());
            } else {
                return '';
            }
        }

        //do pretty formatting for passed date unit
        function formatDate(dateUnit) {
            if (dateUnit < 10) dateUnit = '0' + dateUnit;
            return dateUnit + '';
        }
        });