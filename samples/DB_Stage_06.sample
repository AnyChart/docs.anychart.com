{:tags []
     :is_new false
     :exports "chart"}
	 	 
<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
    <script src="anychart.min.js"></script>

    <script>



        anychart.onDocumentReady(function () {

            // set stage
            stage = anychart.graphics.create('container');


            // set colors for sample
            var textColor = '#7c868e';
            var lineColor = '#CECECE';
            var chart_palette = anychart.palettes.distinctColors().colors(['#bc7c63', '#6594ad', '#585953']);

            // set layers of stage
            var layer_jay = stage.layer(); // layer for the top of the fir-tree
            var layer_woodpecker = stage.layer(); // layer for the middle of the fir-tree
            var layer_squirrel = stage.layer(); // layer for the bottom of the fir-tree
            var layer_beetle = stage.layer(); // layer for the grass
            var layer_mouse = stage.layer(); // layer for the trunk
            var layer_text = stage.layer(); // layer for the text elements

            var getLegend = function (items) {
                var legend = anychart.ui.legend();
                legend.fontSize('11px');
                legend.fontFamily("'Verdana', Helvetica, Arial, sans-serif");
                legend.itemsLayout('horizontal');
                legend.fontColor(textColor);
                legend.iconTextSpacing(0);
                legend.align('left');
                legend.position('top');
                legend.padding(10);
                legend.margin(65, 0, 20,10);
                legend.itemsSpacing(15);
                legend.iconTextSpacing(5);
                legend.title().enabled(false);
                legend.titleSeparator().enabled(true);
                legend.paginator().enabled(false);
                legend.background().enabled(false);
                legend.items(items);
                return legend;
            };
            var chartLegend = getLegend([
                {'index': 0, 'text': 'Comes', 'iconType': 'rect', 'iconStroke': 'none', 'iconFill': '#bc7c63'},
                {'index': 1, 'text': 'Eats', 'iconType': 'square', 'iconStroke': 'none', 'iconFill': '#6594ad'},
                {'index': 2, 'text': 'Mates', 'iconType': 'square', 'iconStroke': 'none', 'iconFill': '#585953'}
            ]);

            chartLegend.container(layer_text).draw();

            var settings_title = {
                fontSize:20,
                fontFamily:"'Verdana', Helvetica, Arial, sans-serif",
                color:'#3D2914'
            };

            var settings_sub = {
                fontSize:18,
                fontFamily:"'Verdana', Helvetica, Arial, sans-serif",
                color:'#998552',
                opacity:20
            };

            var title = layer_text.text(20,20,'The activity of the animals in the biocenose of the fir-tree', settings_title);

            var subtitle = layer_text.text(20,45,'A 10 days observation period', settings_sub);

            var draw_piece_of_tree = function(layer, points, color, z_index, rotation){
                var piece = layer.path().moveTo(points[0][0], points[0][1]).zIndex(z_index).fill(color).stroke(null);
                for (var i = 0; i < points.length; i++) {
                    piece.lineTo(points[i][0], points[i][1]);
                }

                if (rotation) piece.rotateByAnchor(rotation, 'center');
                return piece;
            };

            var draw_piece_shadow = function(layer, points, color, z_index, rotation){
                var piece = layer.path().moveTo(points[0][0], points[0][1]).zIndex(z_index).stroke(null);
                for (var i = 0; i < points.length; i++) {
                    piece.lineTo(points[i][0], points[i][1]);
                }
                piece.fill([color + ' 0.5', color + ' 0.4', color + ' 0'], -90);
                if (rotation) piece.rotateByAnchor(rotation, 'center');
                return piece;
            };

            var on_hover = function (piece, lowerPiece, line, lineShadow, img, imgShadow, fill, fillOut) {
                piece.listen('mouseOver', function (e) {
                    e.stopPropagation();
                    piece.stroke(textColor);
                    lowerPiece.fill(fill, -90);
                    lineShadow.visible(true);
                    imgShadow.visible(true);
                });
                piece.listen('mouseOut', function (e) {
                    e.stopPropagation();
                    lowerPiece.fill(fillOut);

//                    shadow.visible(false);
                    lineShadow.visible(false);
                    imgShadow.visible(false);
                });
                line.listen('mouseOver', function () {
                    lineShadow.visible(true);
                    imgShadow.visible(true);
                    lowerPiece.fill(fill, -90);
                });
                line.listen('mouseOut', function () {
                    lineShadow.visible(false);
                    imgShadow.visible(false);
                    lowerPiece.fill(fillOut);
                });
                img.listen('mouseOver', function () {
                    lineShadow.visible(true);
                    imgShadow.visible(true);
                    lowerPiece.fill(fill, -90);
                });
                img.listen('mouseOut', function () {
                    lineShadow.visible(false);
                    imgShadow.visible(false);
                    lowerPiece.fill(fillOut);
                });
            };

            var on_hover_two_lower = function (line, lineShadow, img, imgShadow) {
                line.listen('mouseOver', function () {
                    lineShadow.visible(true);
                    imgShadow.visible(true);
                });
                line.listen('mouseOut', function () {
                    lineShadow.visible(false);
                    imgShadow.visible(false);
                });
                img.listen('mouseOver', function () {
                    lineShadow.visible(true);
                    imgShadow.visible(true);
                });
                img.listen('mouseOut', function () {
                    lineShadow.visible(false);
                    imgShadow.visible(false);
                });
            };

            var draw_chart = function(container, data, bounds){
                var chart = anychart.line();
                chart.palette(chart_palette);
                var comes_data = data.mapAs({x: [0], value: [1]});
                chart.line(comes_data).markers(null);
                var eats_data = data.mapAs({x: [0], value: [2]});
                chart.line(eats_data).markers(null);
                var mates_data = data.mapAs({x: [0], value: [3]});
                chart.line(mates_data).markers(null);

                chart.background(null);
                chart.bounds(bounds);
                chart.title().enabled(false);
                chart.grid().enabled(false);
                chart.minorGrid().enabled(false);
                chart.grid(1).enabled(false);
                chart.minorGrid(1).enabled(false);
                chart.yScale().minimum('-0.1').maximum('12');
                chart.yScale().ticks().interval(4);
                chart.yAxis().stroke(lineColor);
                chart.yAxis().ticks().stroke(lineColor);
                chart.yAxis().title(false);
                chart.yAxis().minorTicks(false);
                chart.yAxis().labels().textSettings({
                    fontFamily: "'Verdana', Helvetica, Arial, sans-serif",
                    fontWeight: 'normal',
                    fontSize: '12px',
                    fontColor: textColor});
                chart.yAxis().drawFirstLabel(false);
                chart.xAxis(false);
                chart.container(container);
                chart.draw();
            };

            var draw_line = function(layer, points, color, z_index){
                var line = layer.path().moveTo(points[0][0], points[0][1]).stroke(color).zIndex(z_index);
                for (var i = 0; i < points.length; i++) {
                    line.lineTo(points[i][0], points[i][1]);
                }
                return line;
            };

            var draw_picture = function (layer, radius, coordinates, color, pic_name) {
                layer.circle(radius, coordinates[0], coordinates[1])
                        .stroke(color)
                        .fill({
                            src: 'http://static.anychart.com/images/graphics_stage_demo/' + pic_name,
                            mode: acgraph.vector.ImageFillMode.FILL
                        });
                return layer;
            };


            // jay
            var dataSet_jay = anychart.data.set([
                ["1", 4, 0, 0],
                ["2", 2, 1, 0],
                ["3", 2, 1, 0],
                ["4", 2, 0, 0],
                ["5", 3, 1, 1],
                ["6", 1, 1, 0],
                ["7", 2, 0, 1],
                ["8", 4, 2, 0],
                ["9", 5, 1, 1],
                ["10", 3, 1, 0]
            ]);
            layer_jay.text(350, 175, 'Garrulus glandarius').color(textColor);
            var jay_pic = draw_picture(layer_jay, 400, [130, 40], lineColor, 'jay.jpg');
            var jay_pic_shadow = layer_jay.circle(400, 130, 60).fill(['black 0.5','black 0'], .5, .5, null, .5, 0.5, 0.5).zIndex(-2).stroke(null).visible(false);
            var jay_line = draw_line(layer_jay, [[210, 190], [300, 130], [370, 130]], lineColor, -1);
            var jay_line_shadow = draw_line(layer_jay, [[210, 190], [300, 130], [370, 130]], textColor, -1).visible(false);
            draw_chart(layer_jay, dataSet_jay, [450, 80, 250, 100]);
            var top_tree_piece = draw_piece_of_tree(layer_jay, [[175, 120], [250, 240], [100, 240]], '#7cb342', 1, 5);
            layer_jay.zIndex(10);


            // woodpecker
            var dataSet_woodpecker = anychart.data.set([
                ["1", 4, 4, 0],
                ["2", 6, 5, 0],
                ["3", 2, 1, 0],
                ["4", 2, 2, 0],
                ["5", 0, 0, 0],
                ["6", 3, 2, 1],
                ["7", 6, 3, 2],
                ["8", 4, 0, 0],
                ["9", 5, 1, 1],
                ["10", 3, 0, 0]
            ]);
            layer_woodpecker.text(350, 290, 'Dendrocopos analis').color(textColor);
            var woodpecker_pic = draw_picture(layer_woodpecker, 400, [245, 40], lineColor, 'woodpecker.jpg');
            var woodpecker_pic_shadow = layer_woodpecker.circle(400, 245, 60).fill(['black 0.5','black 0'], .5, .5, null, .5, 0.5, 0.5).zIndex(-2).stroke(null).visible(false);
            var woodpecker_line = draw_line(layer_woodpecker, [[250, 290], [300, 240], [370, 240]], lineColor, -1);
            var woodpecker_line_shadow = draw_line(layer_woodpecker, [[250, 290], [300, 240], [370, 240]], textColor, -1).visible(false);
            draw_chart(layer_woodpecker, dataSet_woodpecker, [450, 195, 250, 100]);
            var middle_tree_piece = draw_piece_of_tree(layer_woodpecker, [[175, 165], [280, 340], [70, 340]], '#689f38', 1, 0);

            layer_woodpecker.zIndex(8);


            // squirrel
            var dataSet_squirrel = anychart.data.set([
                ["1", 3, 1, 1],
                ["2", 2, 1, 0],
                ["3", 4, 1, 1],
                ["4", 4, 2, 0],
                ["5", 1, 0, 0],
                ["6", 0, 0, 0],
                ["7", 2, 0, 1],
                ["8", 4, 2, 0],
                ["9", 2, 1, 1],
                ["10", 5, 1, 0]
            ]);
            layer_squirrel.text(360, 405, 'Sciurus vulgaris').color(textColor);
            var squirrel_pic = draw_picture(layer_squirrel, 400, [360, 40], lineColor, 'sqirrel.jpg');
            var squirrel_pic_shadow = layer_squirrel.circle(400, 360, 60).fill(['black 0.5','black 0'], .5, .5, null, .5, 0.5, 0.5).zIndex(-2).stroke(null).visible(false);
            var squirrel_line = draw_line(layer_squirrel, [[260, 365], [370, 365]], lineColor, -1);
            var squirrel_line_shadow = draw_line(layer_squirrel, [[260, 365], [370, 365]], textColor, -1).visible(false);
            draw_chart(layer_squirrel, dataSet_squirrel, [450, 310, 250, 100]);
            var bottom_tree_piece = draw_piece_of_tree(layer_squirrel, [[175, 240], [310, 440], [40, 440]], '#558b2f', 1, 0);

            layer_squirrel.zIndex(6);


            // beetle
            var dataSet_beetle = anychart.data.set([
                ["1", 4, 4],
                ["2", 9, 7],
                ["3", 7, 1],
                ["4", 1, 5],
                ["5", 0, 1],
                ["6", 8, 3],
                ["7", 0, 0],
                ["8", 2, 6],
                ["9", 7, 1],
                ["10", 3, 0]
            ]);
            layer_beetle.text(340, 520, 'Dendroctonus ponderosae').color(textColor);
            var beetle_pic = draw_picture(layer_beetle, 400, [475, 40], lineColor, 'beetle.jpg');
            var beetle_pic_shadow = layer_beetle.circle(400, 475, 60).fill(['black 0.5','black 0'], .5, .5, null, .5, 0.5, 0.5).zIndex(-2).stroke(null).visible(false);
            var beetle_line = draw_line(layer_beetle, [[210, 465], [370, 465]], lineColor, -1);
            var beetle_line_shadow = draw_line(layer_beetle, [[210, 465], [370, 465]], textColor, -1).visible(false);
            draw_chart(layer_beetle, dataSet_beetle, [450, 425, 250, 100]);
            var trunk = draw_piece_of_tree(layer_beetle, [[135, 400], [215, 400], [215, 520], [135, 520], [135, 400]], '#6d4c41', 1, 0);
            layer_beetle.zIndex(4);


            // mouse
            var dataSet_mouse = anychart.data.set([
                ["1", 10, 2, 4],
                ["2", 11, 3, 0],
                ["3", 8, 4, 2],
                ["4", 12, 0, 0],
                ["5", 10, 6, 1],
                ["6", 10, 5, 0],
                ["7", 7, 0, 3],
                ["8", 8, 1, 0],
                ["9", 9, 1, 1],
                ["10", 8, 1, 0]
            ]);
            layer_mouse.text(355, 635, 'Apodemus uralensis').color(textColor);
            var mouse_pic = draw_picture(layer_mouse, 400, [590, 40], lineColor, 'mouse.jpg');
            var mouse_pic_shadow = layer_mouse.circle(400, 590, 60).fill(['black 0.5','black 0'], .5, .5, null, .5, 0.5, 0.5).zIndex(-2).stroke(null).visible(false);
            var mouse_line = draw_line(layer_mouse, [[210, 500], [300, 500], [370, 570]], lineColor, -1);
            var mouse_line_shadow = draw_line(layer_mouse, [[210, 500], [300, 500], [370, 570]], textColor, -1).visible(false);
            draw_chart(layer_mouse, dataSet_mouse, [450, 540, 250, 100]);
            //draw_piece_of_tree(layer_mouse, [[130, 515], [115, 520], [100, 505], [110, 110], [90, 515], [105, 530]], '#33691e', 1, 0);
            //draw_piece_of_tree(layer_mouse, [[230, 515], [245, 500], [240, 520], [260, 505], [250, 525], [270, 515], [255, 530]], '#33691e', 1, 0);
            layer_mouse.zIndex(2);

            on_hover(top_tree_piece, middle_tree_piece, jay_line, jay_line_shadow, jay_pic, jay_pic_shadow, ['#396E1F','#689f38'], '#689f38');
            on_hover(middle_tree_piece, bottom_tree_piece, woodpecker_line, woodpecker_line_shadow, woodpecker_pic, woodpecker_pic_shadow, ['#2A5F18','#558b2f'], '#558b2f');
            on_hover(bottom_tree_piece, trunk, squirrel_line, squirrel_line_shadow, squirrel_pic, squirrel_pic_shadow, ['#412E27','#6d4c41'], '#6d4c41');
            on_hover_two_lower(beetle_line, beetle_line_shadow, beetle_pic, beetle_pic_shadow);
            on_hover_two_lower(mouse_line, mouse_line_shadow, mouse_pic, mouse_pic_shadow);
        });

    </script>
</head>

<body>

<div id="container" style="width: 800px; height: 600px; border: 1px solid blue"></div>



</body>
</html>