{:tags []
     :is_new false
     :exports "chart"}

anychart.onDocumentReady(function() {

  //set stage
  stage = acgraph.create('container');

  customTitle = anychart.elements.title();
  customTitle.enabled(true);
  customTitle.orientation('top').align('left');
  customTitle.zIndex(1);
  customTitle.fontColor('#86cf38');
  customTitle.fontSize(20);
  customTitle.fontWeight(400);
  customTitle.text('System Availability');
  customTitle.container(stage);
  customTitle.draw();

  //data
  var dataSet = anychart.data.set([
    ['2014/10', 100, 100, 100, 100, 100, 100, 100],
    ['2014/09', 97, 97, 97, 97, 97, 97, 97],
    ['2014/08', 98, 98, 70, 98, 98, 98, 98],
    ['2014/07', 98, 98, 98, 98, 98, 98, 98],
    ['2014/06', 99, 99, 99, 99, 99, 99, 99],
    ['2014/05', 100, 100, 100, 100, 100, 100, 100],
    ['2014/04', 99, 99, 99, 99, 99, 99, 99],
    ['2014/03', 98, 98, 98, 98, 98, 98, 98],
    ['2014/02', 98, 98, 98, 98, 98, 98, 98],
    ['2014/01', 97, 97, 97, 97, 97, 97, 97],
    ['2013/12', 99, 99, 99, 99, 99, 99, 99],
    ['2013/11', 100, 100, 100, 100, 100, 100, 100]
  ]);

  //map data for the each series
  var seriesData_1 = dataSet.mapAs({x: [0], value: [1]});
  var seriesData_2 = dataSet.mapAs({x: [0], value: [2]});
  var seriesData_3 = dataSet.mapAs({x: [0], value: [3]});
  var seriesData_4 = dataSet.mapAs({x: [0], value: [4]});
  var seriesData_5 = dataSet.mapAs({x: [0], value: [5]});
  var seriesData_6 = dataSet.mapAs({x: [0], value: [6]});
  var seriesData_7 = dataSet.mapAs({x: [0], value: [7]});

  //chat type
  chart1 = anychart.lineChart();
  chart2 = anychart.lineChart();
  chart3 = anychart.lineChart();
  chart4 = anychart.lineChart();
  chart5 = anychart.lineChart();
  chart6 = anychart.lineChart();
  chart7 = anychart.lineChart();

  chart1.margin(0).padding(0);
  chart2.margin(0).padding(0);
  chart3.margin(0).padding(0);
  chart4.margin(0).padding(0);
  chart5.margin(0).padding(0);
  chart6.margin(0).padding(0);
  chart7.margin(0).padding(0);

  series1 = chart1.line(seriesData_1).markers(null).stroke('black');
  series2 = chart2.line(seriesData_2).markers(null).stroke('black');
  series3 = chart3.line(seriesData_3).markers(null).stroke('black');
  series4 = chart4.line(seriesData_4).markers(null).stroke('black');
  series5 = chart5.line(seriesData_5).markers(null).stroke('black');
  series6 = chart6.line(seriesData_6).markers(null).stroke('black');
  series7 = chart7.line(seriesData_7).markers(null).stroke('black');

  //title
  chart1.title().text('Network').enabled(false);
  chart2.title().text('ERP').enabled(false);
  chart3.title().text('Data Warehouse').enabled(false);
  chart4.title().text('Web Site').enabled(false);
  chart5.title().text('Email').enabled(false);
  chart6.title().text('HR').enabled(false);
  chart7.title().text('Problem Tracking').enabled(false);

  chart1.background().enabled(false);
  chart2.background().enabled(false);
  chart3.background().enabled(false);
  chart4.background().enabled(false);
  chart5.background().enabled(false);
  chart6.background().enabled(false);
  chart7.background().enabled(false);

  chart1.grid().enabled(false);
  chart2.grid().enabled(false);
  chart3.grid().enabled(false);
  chart4.grid().enabled(false);
  chart5.grid().enabled(false);
  chart6.grid().enabled(false);
  chart7.grid().enabled(false);

  chart1.grid(1).enabled(false);
  chart2.grid(1).enabled(false);
  chart3.grid(1).enabled(false);
  chart4.grid(1).enabled(false);
  chart5.grid(1).enabled(false);
  chart6.grid(1).enabled(false);
  chart7.grid(1).enabled(false);

  chart1.minorGrid().enabled(false);
  chart2.minorGrid().enabled(false);
  chart3.minorGrid().enabled(false);
  chart4.minorGrid().enabled(false);
  chart5.minorGrid().enabled(false);
  chart6.minorGrid().enabled(false);
  chart7.minorGrid().enabled(false);

  chart1.xAxis().enabled(false);
  chart1.yAxis().enabled(false);
  chart2.xAxis().enabled(false);
  chart2.yAxis().enabled(false);
  chart3.xAxis().enabled(false);
  chart3.yAxis().enabled(false);
  chart4.xAxis().enabled(false);
  chart4.yAxis().enabled(false);
  chart5.xAxis().enabled(false);
  chart5.yAxis().enabled(false);
  chart6.xAxis().enabled(false);
  chart6.yAxis().enabled(false);
  chart7.xAxis().enabled(false);
  chart7.yAxis().enabled(false);

  bullet1 = anychart.bulletChart([
    {value: 100, gap: 2, type: 'bar', fill: '#CCCCCC'},
    {value: 99, type: 'bar', gap: 1.9, fill: 'white'},
    {value: 98.6, type: 'line', gap: 1.8},
    {value: 85, type: 'line', gap: 2, fill: '#CCCCCC'}
  ]);
  bullet1.bounds(0, 0, '100%', '100%');
  bullet1.layout('horizontal');
  bullet1.axis().enabled(false);
  bullet1.title().orientation('right').text('96.8%');
  bullet1.scale().minimum(85);
  bullet1.margin().top('20%').bottom('20%').left(1);
  bullet1.padding().top(1).bottom(1).right(0).left(2);

  bullet2 = anychart.bulletChart([
    {value: 100, gap: 2, type: 'bar', fill: '#CCCCCC'},
    {value: 98, type: 'bar', gap: 1.9, fill: 'white'},
    {value: 98.6, type: 'line', gap: 1.8},
    {value: 85, type: 'line', gap: 2, fill: '#CCCCCC'}
  ]);
  bullet2.bounds(0, 0, '100%', '100%');
  bullet2.layout('horizontal');
  bullet2.axis().enabled(false);
  bullet2.title().orientation('right').text('96.8%');
  bullet2.scale().minimum(85);
  bullet2.margin().top('20%').bottom('20%').left(1);
  bullet2.padding().top(1).bottom(1).right(0).left(2);

  bullet3 = anychart.bulletChart([
    {value: 100, gap: 2, type: 'bar', fill: '#CCCCCC'},
    {value: 98, type: 'bar', gap: 1.9, fill: 'white'},
    {value: 96.3, type: 'line', gap: 1.8},
    {value: 85, type: 'line', gap: 2, fill: '#CCCCCC'}
  ]);
  bullet3.bounds(0, 0, '100%', '100%');
  bullet3.layout('horizontal');
  bullet3.axis().enabled(false);
  bullet3.title().orientation('right').text('96.8%');
  bullet3.scale().minimum(85);
  bullet3.margin().top('20%').bottom('20%').left(1);
  bullet3.padding().top(1).bottom(1).right(0).left(2);

  bullet4 = anychart.bulletChart([
    {value: 100, gap: 2, type: 'bar', fill: '#CCCCCC'},
    {value: 98, type: 'bar', gap: 1.9, fill: 'white'},
    {value: 98.6, type: 'line', gap: 1.8},
    {value: 85, type: 'line', gap: 2, fill: '#CCCCCC'}
  ]);
  bullet4.bounds(0, 0, '100%', '100%');
  bullet4.layout('horizontal');
  bullet4.axis().enabled(false);
  bullet4.title().orientation('right').text('96.8%');
  bullet4.scale().minimum(85);
  bullet4.margin().top('20%').bottom('20%').left(1);
  bullet4.padding().top(1).bottom(1).right(0).left(2);

  bullet5 = anychart.bulletChart([
    {value: 100, gap: 2, type: 'bar', fill: '#CCCCCC'},
    {value: 98, type: 'bar', gap: 1.9, fill: 'white'},
    {value: 98.6, type: 'line', gap: 1.8},
    {value: 85, type: 'line', gap: 2, fill: '#CCCCCC'}
  ]);
  bullet5.bounds(0, 0, '100%', '100%');
  bullet5.layout('horizontal');
  bullet5.axis().enabled(false);
  bullet5.title().orientation('right').text('96.8%');
  bullet5.scale().minimum(85);
  bullet5.margin().top('20%').bottom('20%').left(1);
  bullet5.padding().top(1).bottom(1).right(0).left(2);

  bullet6 = anychart.bulletChart([
    {value: 100, gap: 2, type: 'bar', fill: '#CCCCCC'},
    {value: 96, type: 'bar', gap: 1.9, fill: 'white'},
    {value: 98.6, type: 'line', gap: 1.8},
    {value: 85, type: 'line', gap: 2, fill: '#CCCCCC'}
  ]);
  bullet6.bounds(0, 0, '100%', '100%');
  bullet6.layout('horizontal');
  bullet6.axis().enabled(false);
  bullet6.title().orientation('right').text('96.8%');
  bullet6.scale().minimum(85);
  bullet6.margin().top('20%').bottom('20%').left(1);
  bullet6.padding().top(1).bottom(1).right(0).left(2);

  bullet7 = anychart.bulletChart([
    {value: 100, gap: 2, type: 'bar', fill: '#CCCCCC'},
    {value: 93, type: 'bar', gap: 1.9, fill: 'white'},
    {value: 98.6, type: 'line', gap: 1.8},
    {value: 85, type: 'line', gap: 2, fill: '#CCCCCC'}
  ]);
  bullet7.bounds(0, 0, '100%', '100%');
  bullet7.layout('horizontal');
  bullet7.axis().enabled(false);
  bullet7.title().orientation('right').text('96.8%');
  bullet7.scale().minimum(85);
  bullet7.margin().top('20%').bottom('20%').left(1);
  bullet7.padding().top(1).bottom(1).right(0).left(2);

  var DNT6AvgData = anychart.data.set([
    [0, 153324, 164324, 176456],
    [1, 145225, 145225, 157951],
    [2, 104978, 104978, 114978],
    [3, 43465, 43465, 44645],
    [4, 12647, 12647, 14636],
    [5, 38766, 38766, 39123],
    [6, 67343, 67343, 68234],
    [7, 158097, 158097, 162234],
    [8, 198630, 198630, 199630],
    [9, 196786, 196786, 197146],
    [10, 187905, 187905, 187905],
    [11, 149784, 149784, 149784],
    [12, 127896, 127896, 127896],
    [13, 147225, 147225, 147225],
    [14, 136120, 136120, 136120],
    [15, 126890, 126890, 126890],
    [16, 106456, 106456, 106456],
    [17, 136804, 136804, 136804],
    [18, 67845, 67845, 67845],
    [19, 46587, 46587, 46587],
    [20, 22678, 22678, 22678],
    [21, 13479, 13479, 13479],
    [22, 46789, 46789, 46789],
    [23, 176098, 176098, 176098]
  ]);

  //map data for the each series
  var seriesAvgData_1 = DNT6AvgData.mapAs({x: [0], value: [1]});
  var seriesAvgData_2 = DNT6AvgData.mapAs({x: [0], value: [2]});
  var seriesAvgData_3 = DNT6AvgData.mapAs({x: [0], value: [3]});

  chartAvg1 = anychart.lineChart();
  chartAvg1.background().enabled(false);
  chartAvg1.xScale(anychart.scales.linear());
  chartAvg1.xScale().maximum(23.5).ticks().interval(6);
  chartAvg1.xAxis().minorTicks().enabled(false);
  chartAvg1.yAxis().minorTicks().enabled(false);
  chartAvg1.yAxis().ticks().stroke('#CCCCCC');
  chartAvg1.xAxis().title().enabled(false);
  chartAvg1.yAxis().title().enabled(false);
  chartAvg1.minorGrid().enabled(false);
  chartAvg1.grid().enabled(false);
  chartAvg1.grid(1).stroke('#CCCCCC');
  chartAvg1.yAxis().stroke('#CCCCCC');
  chartAvg1.yAxis().labels().textFormatter(function(){
    return (this.value / 1000) + 'K'     ;
  });
  chartAvg1.xAxis().stroke('#CCCCCC');
  chartAvg1.xAxis().ticks().enabled(false);
  chartAvg1.xAxis(1).orientation('top').stroke('#CCCCCC');
  chartAvg1.xAxis(1).title().enabled(false);
  chartAvg1.xAxis(1).minorTicks().enabled(false);
  chartAvg1.xAxis(1).ticks().enabled(false);
  chartAvg1.xAxis(1).labels().enabled(false);
  chartAvg1.yScale().maximum(200000).ticks().interval(50000);
  chartAvg1.title()
    .text('Daily Network Traffic')
    .fontColor('#86cf38')
    .hAlign('left')
    .width('100%')
    .fontWeight(400)
    .fontSize(20)
    .padding(0)
    .margin(0);

  series1 = chartAvg1.line(seriesAvgData_1).markers(null).stroke('2 #666666');
  series2 = chartAvg1.line(seriesAvgData_2).markers(null).stroke('2 #333333');
  series3 = chartAvg1.line(seriesAvgData_3).markers(null).stroke('2 #000000');
  series1.name('Daily mean for last 6 month');
  series2.name('Daily mean for last 7 days');
  series3.name('Yesterday');
  chartAvg1.legend().enabled(true).position('top');
  chartAvg1.legend().background().enabled(false);
  chartAvg1.legend().width('100%');

  //create table
  var table = anychart.elements.table();

  //set table content
  table.contents([
    ['Last 12 month', 'System', 'Availability %'],
    [chart1, chart1.title().text(), bullet1],
    [chart2, chart2.title().text(), bullet2],
    [chart3, chart3.title().text(), bullet3],
    [chart4, chart4.title().text(), bullet4],
    [chart5, chart5.title().text(), bullet5],
    [chart6, chart6.title().text(), bullet6],
    [chart7, chart7.title().text(), bullet7],
    [chartAvg1,'',''],
    ['','',''],
    ['','',''],
    ['','',''],
    ['','',''],
  ]);

  var textSettings = anychart.elements.labelsFactory();
  textSettings.vAlign('center');
  textSettings.hAlign('left');
  textSettings.fontSize(17);
  textSettings.fontWeight(600);
  table.cellTextFactory(textSettings);

  table.rowHeight(0, 30);

  for (var cols = 0; cols<table.colsCount(); cols++){
    table.getCell(0, cols).content().vAlign('center');
    table.getCell(0, cols).content().hAlign('center');
    table.getCell(0, cols).content().fontSize(14);
    table.getCell(0, cols).content().fontWeight(600);
    table.getCell(0, cols).content().fontFamily = 'verdana, helvetica, arial, sans-serif';
    table.getCell(0, cols).fill('#444444').content().fontColor('#FFFFFF');
  }

  table.bounds(customTitle.getRemainingBounds());
  table.cellBorder('gray 0.2', 2);

  var cell = table.getCell(8, 0);
  cell.colSpan(3);
  cell.rowSpan(5);


  //set table container and initiate draw
  table.container(stage).draw();

  //legend settings
  customLegend = anychart.elements.legend();
  customLegend.enabled(true);
  customLegend.title().enabled(false);
  customLegend.titleSeparator().enabled(false);
  customLegend.paginator().enabled(false);
  customLegend.itemsLayout('horizontal');
  customLegend.itemsProvider([
    {
      'index': 0,
      'text': 'Actual',
      'iconType': function(path, size) {
        path.clear();
        var x = Math.round(size / 2);
        var y = Math.round(size / 2);
        var height = size * 0.6;
        path.clear()
            .moveTo(x, y - height / 2)
            .lineTo(x, y + height / 2)
            .lineTo(x + 2, y + height / 2)
            .lineTo(x + 2, y - height / 2)
            .close();
      },
      'iconStroke': 'none',
      'iconFill': '#000'
    },
    {
      'index': 1,
      'text': 'Acceptable',
      'iconType': function(path, size) {
        path.clear();
        var x = Math.round(size / 2);
        var y = Math.round(size / 2);
        var height = size * 0.8;
        path.clear()
            .moveTo(x - 2, y - height / 2)
            .lineTo(x - 2, y + height / 2)
            .lineTo(x + 3, y + height / 2)
            .lineTo(x + 3, y - height / 2)
            .close();
      },
      'iconStroke': 'none',
      'iconFill': '#ccc'
    }
  ]);
  customLegend.background().enabled(false);
  customLegend.position('right').align('top');
  customLegend.zIndex(2);
  customLegend.margin().top(20);
  customLegend.parentBounds(
    anychart.math.rect(
      0,
      0,
      customTitle.container().width(),
      customTitle.container().height()
    )
  );
  customLegend.container(stage);
  customLegend.draw();
});